// Code generated by gen_errors/gen.go; DO NOT EDIT.
package errz

import "fmt"

// Error represents a centralized error definition.
type Error struct {
	Domain      string
	Code        string
	Msg         string
	Cause       string
}

func (e *Error) Error() string {
	return fmt.Sprintf("[%s][%s] msg: %s | cause: %s",
		e.Domain, e.Code, e.Msg, e.Cause)
}

var (
	AU0001 = &Error{
		Domain: "auth",
		Code: "AU0001",
		Msg: "invalid credentials",
		Cause: "username or password incorrect",
	}
	CM0000 = &Error{
		Domain: "common",
		Code: "CM0000",
		Msg: "success",
		Cause: "operation completed successfully",
	}
	CM0400 = &Error{
		Domain: "common",
		Code: "CM0400",
		Msg: "bad request",
		Cause: "invalid input or malformed request",
	}
	CM0500 = &Error{
		Domain: "common",
		Code: "CM0500",
		Msg: "internal server error",
		Cause: "unexpected server-side error",
	}
	PM0001 = &Error{
		Domain: "payment",
		Code: "PM0001",
		Msg: "insufficient balance",
		Cause: "user has not enough balance",
	}
	PM0002 = &Error{
		Domain: "payment",
		Code: "PM0002",
		Msg: "payment gateway timeout",
		Cause: "no response from payment gateway",
	}
)

